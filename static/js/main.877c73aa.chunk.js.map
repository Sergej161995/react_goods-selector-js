{"version":3,"sources":["App.jsx","index.jsx"],"names":["goods","App","useState","selectedGood","setSelectedGood","selectedGoodTitle","handleSelectFactory","good","className","type","onClick","length","map","isSelected","classNames","ReactDOM","render","document","getElementById"],"mappings":"4OAKaA,EAAQ,CACnB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGWC,EAAM,WACjB,MAAwCC,mBAAS,OAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAoBF,EAAY,UAAMA,EAAN,gBAAmC,GAEnEG,EAAsB,SAAAC,GAAI,OAAI,WAClCH,EAAgBG,KAGlB,OACE,uBAAMC,UAAU,oBAAhB,UACE,oBAAIA,UAAU,sCAAd,SACGL,EACC,qCACGE,EAED,wBACE,UAAQ,cACRI,KAAK,SACLD,UAAU,cACVE,QAAS,kBAAMN,EAAgB,UAInC,sBAIJ,uBAAOI,UAAU,QAAjB,SACE,kCACKR,EAAMW,QACP,mCACGX,EAAMY,KAAI,SAACL,GACV,IAAMM,EAAaN,IAASJ,EAE5B,OACE,qBACE,UAAQ,OACRK,UAAWM,IAAW,CACpB,+BAAgCP,IAASJ,IAH7C,UAOE,6BACGU,EACC,wBACE,UAAQ,eACRJ,KAAK,SACLD,UAAU,iBACVE,QAASJ,EAAoB,IAJ/B,eASA,wBACE,UAAQ,YACRG,KAAK,SACLD,UAAU,SACVE,QAASJ,EAAoBC,GAJ/B,iBAWJ,oBAAI,UAAQ,YAAYC,UAAU,eAAlC,SACGD,MAzBEA,gBCvDzBQ,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.877c73aa.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport { useState } from 'react';\nimport classNames from 'classnames';\n\nexport const goods = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nexport const App = () => {\n  const [selectedGood, setSelectedGood] = useState('Jam');\n  const selectedGoodTitle = selectedGood ? `${selectedGood} is selected` : '';\n\n  const handleSelectFactory = good => () => {\n    setSelectedGood(good);\n  };\n\n  return (\n    <main className=\"section container\">\n      <h1 className=\"title is-flex is-align-items-center\">\n        {selectedGood ? (\n          <>\n            {selectedGoodTitle}\n\n            <button\n              data-cy=\"ClearButton\"\n              type=\"button\"\n              className=\"delete ml-3\"\n              onClick={() => setSelectedGood('')}\n            />\n          </>\n        ) : (\n          'No goods selected'\n        )}\n      </h1>\n\n      <table className=\"table\">\n        <tbody>\n          {!!goods.length && (\n            <>\n              {goods.map((good) => {\n                const isSelected = good === selectedGood;\n\n                return (\n                  <tr\n                    data-cy=\"Good\"\n                    className={classNames({\n                      'has-background-success-light': good === selectedGood,\n                    })}\n                    key={good}\n                  >\n                    <td>\n                      {isSelected ? (\n                        <button\n                          data-cy=\"RemoveButton\"\n                          type=\"button\"\n                          className=\"button is-info\"\n                          onClick={handleSelectFactory('')}\n                        >\n                          -\n                        </button>\n                      ) : (\n                        <button\n                          data-cy=\"AddButton\"\n                          type=\"button\"\n                          className=\"button\"\n                          onClick={handleSelectFactory(good)}\n                        >\n                          +\n                        </button>\n                      )}\n                    </td>\n\n                    <td data-cy=\"GoodTitle\" className=\"is-vcentered\">\n                      {good}\n                    </td>\n                  </tr>\n                );\n              })}\n            </>\n          )}\n        </tbody>\n      </table>\n    </main>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}